{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAkF;AACvC;AACG;AACF;AACe;AAKpD,IAAMM,eAAe,GAArB,MAAMA,eAAe;EAC1BC,iBAAiBA,CAACC,WAAgB;IAChC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,iBAAiBA,CAACF,WAAgB;IAChC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAE,cAAcA,CAACC,MAAW;IACxB,MAAM,IAAIH,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EASAI,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANxB;IACA,WAAM,GAAW,6BAA6B;IAC9C,YAAO,GAAG,IAAIb,6DAAW,EAAE,CAACc,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACnE,eAAU,GAAWV,6EAAmB,GAAG,kBAAkB;EAGrB;EAExC;EACAY,MAAMA,CAACC,IAAS;IACd,IAAIC,OAAO,GAAG,GAAG,IAAI,CAACC,UAAU,EAAE;IAClC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACF,OAAO,EAAED,IAAI,CAAC,CACjCI,IAAI,CACHlB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACL;EAEAC,OAAOA,CAACN,IAAQ;IACd,IAAIC,OAAO,GAAG,GAAG,IAAI,CAACM,MAAM,EAAE;IAC9B,OAAO,IAAI,CAACX,IAAI,CAACO,IAAI,CAACF,OAAO,EAAED,IAAI,CAAC,CACjCI,IAAI,CACHlB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACL;EAGA;EACAG,IAAIA;IACF,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACP,UAAU,EAAE,CAAC;EAC5C;EAEAQ,MAAMA;IACJ,OAAO,IAAI,CAACd,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACxC;EAGDI,MAAMA;IACL,OAAO,IAAI,CAACf,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACxC;EAEEK,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACjB,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACP,UAAU,IAAIW,EAAE,EAAE,CAAC;EACzD;EAEAC,YAAYA,CAACD,EAAU;IACvB,OAAO,IAAI,CAACjB,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAIM,EAAE,EAAE,CAAC;EACjD;EAGE;EACAE,MAAMA,CAACF,EAAO,EAAEb,IAAS;IACvB,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACC,UAAU,IAAIW,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACjB,IAAI,CAACoB,GAAG,CAACf,OAAO,EAAED,IAAI,EAAE;MAAEiB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC,CAACb,IAAI,CACjElB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACH;EAEAa,OAAOA,CAACL,EAAO,EAAEb,IAAS;IACxB,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACM,MAAM,IAAIM,EAAE,EAAE;IACtC,OAAO,IAAI,CAACjB,IAAI,CAACoB,GAAG,CAACf,OAAO,EAAED,IAAI,EAAE;MAAEiB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC,CAACb,IAAI,CACjElB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACH;EAGA;EACAc,MAAMA,CAACN,EAAO;IACZ,IAAIZ,OAAO,GAAG,GAAG,IAAI,CAACC,UAAU,IAAIW,EAAE,EAAE;IACxC,OAAO,IAAI,CAACjB,IAAI,CAACuB,MAAM,CAAClB,OAAO,CAAC,CAACG,IAAI,CACnClB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACH;EAEAe,OAAOA,CAACP,EAAO;IACb,IAAIZ,OAAO,GAAG,GAAG,IAAI,CAACM,MAAM,IAAIM,EAAE,EAAE;IACpC,OAAO,IAAI,CAACjB,IAAI,CAACuB,MAAM,CAAClB,OAAO,CAAC,CAACG,IAAI,CACnClB,0DAAU,CAAC,IAAI,CAACmB,WAAW,CAAC,CAC7B;EACH;EAEA;EACAA,WAAWA,CAACgB,KAAwB;IAClC,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;MACrCC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;KACzD,MAAM;MACLD,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACI,MAAM,IAAI,GACzC,aAAaJ,KAAK,CAACA,KAAK,EAAE,CAAC;;IAE/B,OAAOpC,gDAAU,CACf,iDAAiD,CAAC;EACtD;EAEAyC,QAAQA;IACN,OAAO,IAAI,CAAC9B,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACP,UAAU,EAAE,CAAC;EAC5C;EAEAyB,OAAOA;IACL,OAAO,IAAI,CAAC/B,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACxC;EAAC;;;;AA/GUnB,eAAe,sDAH3BJ,yDAAU,CAAC;EACV4C,UAAU,EAAE;CACb,CAAC,GACWxC,eAAe,CAgH3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzH+D;AACT;AACF;AACI;AACJ;AACE;AACQ;AACV;AACM;AACF;AACI;AACI;AACV;AACS;AACH;AACR;AACc;AACC;AACC;AACV;AACN;AAEI;AAChB;AACM;AACmB;AACnB;AAC/C;AACyD;AA2ElD,IAAMsE,cAAc,GAApB,MAAMA,cAAc,GAAI;AAAlBA,cAAc,sDAzE1BP,uDAAQ,CAAC;EACRQ,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,CACPR,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBC,yDAAY,EACZzB,mEAAc,EACdC,iEAAa,EACbC,qEAAe,EACfC,iEAAa,EACbC,mEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbP,2EAAiB,EACjBQ,wEAAgB,EAChBC,sEAAe,EACfC,0EAAiB,EACjBC,8EAAmB,EACnBG,wEAAmB,EACnBF,oEAAc,EACdC,6EAAkB,EAClBE,kEAAa,EACbC,iFAAoB,EACpBC,iFAAoB,EACpBI,oEAAe,EACfH,kFAAqB;EAErB;EACAU,6DAAoB,CAAC;IACnBK,aAAa,EAAE,iBAAiB;IAChCC,iBAAiB,EAAE,IAAI;IACvBC,UAAU,EAAE;GACb,CAAC,CAEH;EACDC,OAAO,EAAE,CACPb,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBC,yDAAY,EACZzB,mEAAc,EACdC,iEAAa,EACbC,qEAAe,EACfC,iEAAa,EACbC,mEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbP,2EAAiB,EACjBQ,wEAAgB,EAChBC,sEAAe,EACfC,0EAAiB,EACjBC,8EAAmB,EACnBG,wEAAmB,EACnBF,oEAAc,EACdC,6EAAkB,EAClBE,kEAAa,EACbC,iFAAoB,EACpBC,iFAAoB,EACpBI,oEAAe,EACfH,kFAAqB,EACrBC,wEAAgB,EAChBC,kEAAa;EACb;EACAQ,qDAAY,CACb;EAEDS,SAAS,EAAE,CACTV,sDAAa;CAGhB,CAAC,GAEWE,cAAc,CAAI","sources":["./src/app/crud-http.service.ts","./src/material.module.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudHttpService {\r\n  updateUserInTable(userDetails: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  updateUserDetails(userDetails: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getUserDetails(userId: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  // apiUrl: string = environment.nodeApi + 'v1/todos';\r\n  apiUrl: string = 'http://localhost:5000/todos';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  getItemUrl: string = environment.nodeApi + '/v1/organization';\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Create\r\n  create(data: any): Observable<any> {\r\n    let API_URL = `${this.getItemUrl}`;\r\n    return this.http.post(API_URL, data)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  created(data:any): Observable<any> { \r\n    let API_URL = `${this.apiUrl}`;\r\n    return this.http.post(API_URL, data)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n\r\n  // Read\r\n  list() {\r\n    return this.http.get(`${this.getItemUrl}`);\r\n  }\r\n\r\n  listed(){\r\n    return this.http.get(`${this.apiUrl}`)\r\n  }\r\n\r\n\r\n getAll() {\r\n  return this.http.get(`${this.apiUrl}`);\r\n}\r\n\r\n  getUserById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.getItemUrl}/${id}`);\r\n}\r\n\r\ngetGroupById(id: number): Observable<any>{\r\nreturn this.http.get<any>(`${this.apiUrl}/${id}`);\r\n}\r\n\r\n\r\n  // Update\r\n  update(id: any, data: any): Observable<any> {\r\n    const API_URL = `${this.getItemUrl}/${id}`;\r\n    return this.http.put(API_URL, data, { headers: this.headers }).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  updated(id: any, data: any): Observable<any> {\r\n    const API_URL = `${this.apiUrl}/${id}`;\r\n    return this.http.put(API_URL, data, { headers: this.headers }).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n\r\n  // Delete\r\n  delete(id: any): Observable<any> {\r\n    var API_URL = `${this.getItemUrl}/${id}`;\r\n    return this.http.delete(API_URL).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  deleted(id: any): Observable<any> {\r\n    var API_URL = `${this.apiUrl}/${id}`;\r\n    return this.http.delete(API_URL).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // Handle API errors\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(`${this.getItemUrl}`);\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}`)\r\n  }\r\n}\r\n","import { MatGridListModule } from '@angular/material/grid-list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle'\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { MatOptionModule } from \"@angular/material/core\";\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n// import { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { ToastrService, ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatDividerModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    \r\n    // SignaturePadModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n      enableHtml: true\r\n    }),\r\n\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatDividerModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    // SignaturePadModule,\r\n    ToastrModule,\r\n  ],\r\n\r\n  providers: [\r\n    ToastrService,\r\n  ],\r\n\r\n})\r\n\r\nexport class MaterialModule { }\r\n"],"names":["HttpClient","HttpHeaders","Injectable","throwError","catchError","environment","CrudHttpService","updateUserInTable","userDetails","Error","updateUserDetails","getUserDetails","userId","constructor","http","set","nodeApi","create","data","API_URL","getItemUrl","post","pipe","handleError","created","apiUrl","list","get","listed","getAll","getUserById","id","getGroupById","update","put","headers","updated","delete","deleted","error","ErrorEvent","console","message","status","getItems","getData","providedIn","MatGridListModule","MatInputModule","MatIconModule","MatButtonModule","MatSortModule","MatTableModule","MatPaginatorModule","MatTabsModule","MatDividerModule","MatSelectModule","MatCheckboxModule","MatDatepickerModule","MatRadioModule","MatFormFieldModule","MatNativeDateModule","MatCardModule","MatSlideToggleModule","MatProgressBarModule","MatAutocompleteModule","MatTooltipModule","MatMenuModule","MatOptionModule","NgModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","ToastrService","ToastrModule","MaterialModule","declarations","imports","forRoot","positionClass","preventDuplicates","enableHtml","exports","providers"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}